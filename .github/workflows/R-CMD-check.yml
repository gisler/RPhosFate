# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: '3.5.3'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@v1

      - name: Query dependencies
        run: |
          install.packages("remotes")
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Install dependencies (3.5.3)
        if: matrix.config.r == '3.5.3'
        run: |
          remotes::install_cran(
            c("checkmate", "hydroGOF", "raster", "Rcpp", "RcppArmadillo", "spatstat", "yaml", "whitebox", "rcmdcheck"),
            repos = c("https://gisler.github.io/drat", "https://mran.microsoft.com/snapshot/2019-04-15"),
            type = "win.binary",
            dependencies = TRUE,
            lib = .libPaths()[2L]
          )
          remotes::install_deps(
            dependencies = TRUE,
            type = "win.binary",
            upgrade = "never",
            lib = .libPaths()[2L]
          )
          remotes::install_cran(
            "covr",
            type = "win.binary",
            lib = .libPaths()[2L]
          )
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: |
          Rcpp::compileAttributes()
          rcmdcheck::rcmdcheck(
            args = c("--no-manual", "--as-cran"),
            check_dir = "check",
            libpath = .libPaths()[2L],
            error_on = "warning"
          )
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

      - name: Test coverage
        if: runner.os == 'Windows' && matrix.config.r == '3.5.3'
        run: |
          Rcpp::compileAttributes()
          covr::codecov()
        shell: Rscript {0}
